// Code generated by swaggo/swag. DO NOT EDIT.

package wallet

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/callContract": {
            "post": {
                "description": "call contract method and retrieves values.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Call contract",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.CallContractRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseBody"
                        }
                    }
                }
            }
        },
        "/createWallet": {
            "post": {
                "description": "Creates a wallet reference and generates keys for the wallet.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates Wallet",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.WalletRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseBody"
                        }
                    }
                }
            }
        },
        "/deployContract": {
            "post": {
                "description": "deploys smart contract onto the network.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Deploys contract",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.DeployContractRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseBody"
                        }
                    }
                }
            }
        },
        "/estimateGas": {
            "post": {
                "description": "estimates gas for the transaction.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Estimate gas",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.EstimateGasRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseBody"
                        }
                    }
                }
            }
        },
        "/getBalance": {
            "post": {
                "description": "retrieves wallet balance for a network.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get balance",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.WalletBalanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseBody"
                        }
                    }
                }
            }
        },
        "/signAndSubmitGaslessTxn": {
            "post": {
                "description": "signs and submits gasless transaction onto network.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Submit gasless transaction",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.SignAndSubmitGSNTxnRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseBody"
                        }
                    }
                }
            }
        },
        "/signEIP712Tx": {
            "post": {
                "description": "sign EIP712 typed data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Sign EIP712 data",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.EIP712SignRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseBody"
                        }
                    }
                }
            }
        },
        "/signMessage": {
            "post": {
                "description": "sign message and return signature.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Sign message",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.SignMsgRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseBody"
                        }
                    }
                }
            }
        },
        "/submitTransaction": {
            "post": {
                "description": "Signs and submits txn onto the network.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Submits transaction",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.SignAndSubmitTxn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseBody"
                        }
                    }
                }
            }
        },
        "/verifySignatureOffChain": {
            "post": {
                "description": "verifies signature offline.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Verify signature",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.VerifyMsgRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseBody"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "utils.CallContractRequest": {
            "type": "object",
            "properties": {
                "contractABI": {
                    "type": "string",
                    "example": "hello"
                },
                "gas": {
                    "type": "integer"
                },
                "method": {
                    "type": "string",
                    "example": "store"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.Param"
                    }
                },
                "to": {
                    "type": "string",
                    "example": "0xc2de797fab7d2d2b26246e93fcf2cd5873a90b10"
                },
                "value": {
                    "type": "integer"
                },
                "walletId": {
                    "type": "string"
                }
            }
        },
        "utils.DeployContractRequest": {
            "type": "object",
            "properties": {
                "abi": {
                    "type": "string"
                },
                "byteCode": {
                    "type": "string"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.Param"
                    }
                },
                "walletId": {
                    "type": "string"
                }
            }
        },
        "utils.EIP712SignRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "walletId": {
                    "type": "string"
                }
            }
        },
        "utils.EstimateGasRequest": {
            "type": "object",
            "properties": {
                "byteCode": {
                    "type": "string"
                },
                "contractABI": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "gas": {
                    "type": "integer"
                },
                "isContractTxn": {
                    "type": "boolean"
                },
                "method": {
                    "type": "string"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.Param"
                    }
                },
                "to": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                },
                "walletId": {
                    "type": "string"
                }
            }
        },
        "utils.Param": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "utils.ResponseBody": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "utils.SignAndSubmitGSNTxnRequest": {
            "type": "object",
            "properties": {
                "chainId": {
                    "type": "integer",
                    "example": 80001
                },
                "contractABI": {
                    "type": "string",
                    "example": ""
                },
                "dAppId": {
                    "type": "string"
                },
                "gas": {
                    "type": "integer"
                },
                "method": {
                    "type": "string",
                    "example": "store"
                },
                "params": {
                    "type": "array",
                    "items": {}
                },
                "to": {
                    "type": "string",
                    "example": "store"
                },
                "value": {
                    "type": "integer"
                },
                "walletId": {
                    "type": "string"
                }
            }
        },
        "utils.SignAndSubmitTxn": {
            "type": "object",
            "properties": {
                "contractABI": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "gas": {
                    "type": "integer"
                },
                "gasLimit": {
                    "type": "integer"
                },
                "isContractTxn": {
                    "description": "Params        []interface{} ` + "`" + `json:\"params\"` + "`" + `",
                    "type": "boolean"
                },
                "method": {
                    "type": "string"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.Param"
                    }
                },
                "to": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                },
                "walletId": {
                    "type": "string"
                }
            }
        },
        "utils.SignMsgRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "walletId": {
                    "type": "string"
                }
            }
        },
        "utils.VerifyMsgRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "walletId": {
                    "type": "string"
                }
            }
        },
        "utils.WalletBalanceRequest": {
            "type": "object",
            "properties": {
                "chainId": {
                    "type": "string"
                },
                "walletId": {
                    "type": "string"
                }
            }
        },
        "utils.WalletRequest": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8889",
	BasePath:         "/wallet",
	Schemes:          []string{"https"},
	Title:            "KMS Wallet",
	Description:      "KMS Wallet Implementation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
